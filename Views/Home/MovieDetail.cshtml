@model MovieStoreMvc.Models.Domain.Movie
@{
}
<div class="movie-detail w-80 m-auto">
    <div class="img-container">
        <img alt="image" src="/Uploads/@Model.MovieImage">
    </div>

    <div class="detail-container">
        <h3>@Model.Title</h3>
        <h4>@Model.GenreNames</h4>
        <h4>@Model.ReleaseYear</h4>
        <h4>Cast : @Model.Cast</h4>
        <h4>Director : @Model.Director</h4>
        <div class="stars">
            <i class="fa-solid fa-star"></i>
            <i class="fa-solid fa-star"></i>
            <i class="fa-solid fa-star"></i>
            <i class="fa-solid fa-star"></i>
            <i class="fa-solid fa-star"></i>
            <i class="fa-solid fa-star"></i>
        </div>
    </div>
</div>
<div class="w-80 m-auto">
    <a href="/Home/Index" class="btn btn-default">Back</a>
</div>

<script>
    // Select all elements with the "i" tag and store them in a NodeList called "stars"
    const stars = document.querySelectorAll(".stars i");

    // Loop through the "stars" NodeList
    stars.forEach((star, index1) => {
        // Add an event listener that runs a function when the "click" event is triggered
        star.addEventListener("click", () => {
            // Loop through the "stars" NodeList Again
            stars.forEach((star, index2) => {
                // Add the "active" class to the clicked star and any stars with a lower index
                // and remove the "active" class from any stars with a higher index
                index1 >= index2 ? star.classList.add("active") : star.classList.remove("active");

            });
            const activestars = document.querySelectorAll(".stars .active");
            updateRating(activestars.length);
        });
    });

    async function updateRating(count) {
        let x = await fetch('/api/rating', {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: @Model.Id, rating: count })
        });
        console.log(count);
    }

    const existingRatingCount = @Model.Rating
        stars.forEach((star, index1) => {
            if (existingRatingCount >= index1 + 1) {
                star.classList.add("active")
            }
        });
</script>